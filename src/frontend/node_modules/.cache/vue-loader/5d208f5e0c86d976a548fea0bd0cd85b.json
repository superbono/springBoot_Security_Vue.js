{"remainingRequest":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/src/components/LoginForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/src/components/LoginForm.vue","mtime":1643272703406},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idG4gewogIGNvbG9yOiB3aGl0ZTsKfQo="},{"version":3,"sources":["LoginForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA","file":"LoginForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"contents\">\n    <div class=\"form-wrapper form-wrapper-sm\">\n      <form @submit.prevent=\"submitForm\" class=\"form\">\n        <div>\n          <label for=\"username\">id:</label>\n          <input id=\"username\" type=\"text\" v-model=\"username\" />\n          <p class=\"validation-text\">\n            <span class=\"warning\" v-if=\"!isUsernameValid && username\">\n              Please enter an email address\n            </span>\n          </p>\n        </div>\n        <div>\n          <label for=\"password\">pw:</label>\n          <input id=\"password\" type=\"text\" v-model=\"password\" />\n        </div>\n        <button\n            :disabled=\"!isUsernameValid || !password\"\n            type=\"submit\"\n            class=\"btn\"\n        >\n          로그인\n        </button>\n      </form>\n      <p class=\"log\">{{ logMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { validateEmail } from '@/utils/validation';\n\nexport default {\n  data() {\n    return {\n      // form values\n      username: '',\n      password: '',\n      // log\n      logMessage: '',\n    };\n  },\n  computed: {\n    isUsernameValid() {\n      return validateEmail(this.username);\n    },\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // 비즈니스 로직\n        const userData = {\n          username: this.username,\n          password: this.password,\n        };\n        const response = await this.$store.dispatch('LOGIN', userData);\n        // await this.$store.dispatch('LOGIN', userData);\n        // console.log(response.headers);\n        console.log('완료');\n        this.$router.push('/main');\n        this.initForm();\n      } catch (error) {\n        // 에러 핸들링할 코드\n        console.log(error.response.data);\n        this.logMessage = error.response.data;\n      } finally {\n        this.initForm();\n      }\n    },\n    initForm() {\n      this.username = '';\n      this.password = '';\n    },\n  },\n};\n</script>\n\n<style>\n.btn {\n  color: white;\n}\n</style>\n"]}]}
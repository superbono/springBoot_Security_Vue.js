{"remainingRequest":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\src\\components\\SignupForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\src\\components\\SignupForm.vue","mtime":1643288382505},{"path":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643284406396},{"path":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1643284404080},{"path":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643284406396},{"path":"C:\\Users\\choi\\Desktop\\springBoot_Security_Vue.js\\src\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1643284462596}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyByZWdpc3RlclVzZXIgfSBmcm9tICdAL2FwaS9hdXRoJzsNCmltcG9ydCB7IHZhbGlkYXRlRW1haWwgfSBmcm9tICdAL3V0aWxzL3ZhbGlkYXRpb24nOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIC8vIGZvcm0gdmFsdWVzDQogICAgICB1c2VybmFtZTogJycsDQogICAgICBwYXNzd29yZDogJycsDQogICAgICBuaWNrbmFtZTogJycsDQogICAgICAvLyBsb2cNCiAgICAgIGxvZ01lc3NhZ2U6ICcnLA0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBzdWJtaXRGb3JtKCkgew0KICAgICAgY29uc3QgdXNlckRhdGEgPSB7DQogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLA0KICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCwNCiAgICAgICAgbmlja25hbWU6IHRoaXMubmlja25hbWUsDQogICAgICB9Ow0KICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCByZWdpc3RlclVzZXIodXNlckRhdGEpOw0KICAgICAgY29uc29sZS5sb2coZGF0YS51c2VybmFtZSk7DQogICAgICB0aGlzLmxvZ01lc3NhZ2UgPSBgJHt0aGlzLnVzZXJuYW1lfWAgKyAgIuuLmOydtCDqsIDsnoXrkJjsl4jsirXri4jri6QiOw0KICAgICAgdGhpcy5pbml0Rm9ybSgpOw0KICAgIH0sDQogICAgaW5pdEZvcm0oKSB7DQogICAgICB0aGlzLnVzZXJuYW1lID0gJyc7DQogICAgICB0aGlzLnBhc3N3b3JkID0gJyc7DQogICAgICB0aGlzLm5pY2tuYW1lID0gJyc7DQogICAgfSwNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBpc1VzZXJuYW1lVmFsaWQoKSB7DQogICAgICByZXR1cm4gdmFsaWRhdGVFbWFpbCh0aGlzLnVzZXJuYW1lKTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["SignupForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignupForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <form @submit.prevent=\"submitForm\">\r\n    <div>\r\n      <label for=\"username\">id:</label>\r\n      <input id=\"username\" type=\"text\" v-model=\"username\" />\r\n      <p class=\"validation-text\">\r\n            <span class=\"warning\" v-if=\"!isUsernameValid && username\">\r\n              Please enter an email address\r\n            </span>\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">pw: </label>\r\n      <input id=\"password\" type=\"password\" v-model=\"password\" />\r\n    </div>\r\n    <div>\r\n      <label for=\"nickname\">nickname: </label>\r\n      <input id=\"nickname\" type=\"text\" v-model=\"nickname\" />\r\n    </div>\r\n<!--    <button type=\"submit\">회원 가입</button>-->\r\n    <button\r\n        :disabled=\"!isUsernameValid || !password || !nickname\"\r\n        type=\"submit\"\r\n        class=\"btn\"\r\n    >\r\n      회원가입\r\n    </button>\r\n    <p>{{ logMessage }}</p>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { registerUser } from '@/api/auth';\r\nimport { validateEmail } from '@/utils/validation';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // form values\r\n      username: '',\r\n      password: '',\r\n      nickname: '',\r\n      // log\r\n      logMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      const userData = {\r\n        username: this.username,\r\n        password: this.password,\r\n        nickname: this.nickname,\r\n      };\r\n      const { data } = await registerUser(userData);\r\n      console.log(data.username);\r\n      this.logMessage = `${this.username}` +  \"님이 가입되었습니다\";\r\n      this.initForm();\r\n    },\r\n    initForm() {\r\n      this.username = '';\r\n      this.password = '';\r\n      this.nickname = '';\r\n    },\r\n  },\r\n  computed: {\r\n    isUsernameValid() {\r\n      return validateEmail(this.username);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]}]}
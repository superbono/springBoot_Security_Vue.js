{"remainingRequest":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/src/components/SignupForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/src/components/SignupForm.vue","mtime":1643330024908},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/choi/Documents/workspace/springBoot_Security_Vue.js/src/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlZ2lzdGVyVXNlciB9IGZyb20gJ0AvYXBpL2F1dGgnOwppbXBvcnQgeyB2YWxpZGF0ZUVtYWlsIH0gZnJvbSAnQC91dGlscy92YWxpZGF0aW9uJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gZm9ybSB2YWx1ZXMKICAgICAgdXNlcm5hbWU6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIG5pY2tuYW1lOiAnJywKICAgICAgLy8gbG9nCiAgICAgIGxvZ01lc3NhZ2U6ICcnLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHN1Ym1pdEZvcm0oKSB7CiAgICAgIGNvbnN0IHVzZXJEYXRhID0gewogICAgICAgIHVzZXJuYW1lOiB0aGlzLnVzZXJuYW1lLAogICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLAogICAgICAgIG5pY2tuYW1lOiB0aGlzLm5pY2tuYW1lLAogICAgICB9OwogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHJlZ2lzdGVyVXNlcih1c2VyRGF0YSk7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEudXNlcm5hbWUpOwogICAgICB0aGlzLmxvZ01lc3NhZ2UgPSBgJHt0aGlzLnVzZXJuYW1lfWAgKyAgIuuLmOydtCDqsIDsnoXrkJjsl4jsirXri4jri6QiOwogICAgICB0aGlzLmluaXRGb3JtKCk7CiAgICB9LAogICAgaW5pdEZvcm0oKSB7CiAgICAgIHRoaXMudXNlcm5hbWUgPSAnJzsKICAgICAgdGhpcy5wYXNzd29yZCA9ICcnOwogICAgICB0aGlzLm5pY2tuYW1lID0gJyc7CiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzVXNlcm5hbWVWYWxpZCgpIHsKICAgICAgcmV0dXJuIHZhbGlkYXRlRW1haWwodGhpcy51c2VybmFtZSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["SignupForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignupForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <div>\n      <label for=\"username\">id:</label>\n      <input id=\"username\" type=\"text\" v-model=\"username\" />\n      <p class=\"validation-text\">\n            <span class=\"warning\" v-if=\"!isUsernameValid && username\">\n              Please enter an email address\n            </span>\n      </p>\n    </div>\n    <div>\n      <label for=\"password\">pw: </label>\n      <input id=\"password\" type=\"password\" v-model=\"password\" />\n    </div>\n    <div>\n      <label for=\"nickname\">nickname: </label>\n      <input id=\"nickname\" type=\"text\" v-model=\"nickname\" />\n    </div>\n<!--    <button type=\"submit\">회원 가입</button>-->\n    <button\n        :disabled=\"!isUsernameValid || !password || !nickname\"\n        type=\"submit\"\n        class=\"btn\"\n    >\n      회원가입\n    </button>\n    <p>{{ logMessage }}</p>\n  </form>\n</template>\n\n<script>\nimport { registerUser } from '@/api/auth';\nimport { validateEmail } from '@/utils/validation';\n\nexport default {\n  data() {\n    return {\n      // form values\n      username: '',\n      password: '',\n      nickname: '',\n      // log\n      logMessage: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n      const userData = {\n        username: this.username,\n        password: this.password,\n        nickname: this.nickname,\n      };\n      const { data } = await registerUser(userData);\n      console.log(data.username);\n      this.logMessage = `${this.username}` +  \"님이 가입되었습니다\";\n      this.initForm();\n    },\n    initForm() {\n      this.username = '';\n      this.password = '';\n      this.nickname = '';\n    },\n  },\n  computed: {\n    isUsernameValid() {\n      return validateEmail(this.username);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}